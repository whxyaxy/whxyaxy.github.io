{
    "version": "https://jsonfeed.org/version/1",
    "title": "沫上花薇开 • All posts by \"博客\" category",
    "description": "一枚小白程序猿的记录",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2019/11/06/blog/hexo%E7%9A%84diaspora%E4%B8%BB%E9%A2%98%E7%9A%84%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/",
            "url": "http://example.com/2019/11/06/blog/hexo%E7%9A%84diaspora%E4%B8%BB%E9%A2%98%E7%9A%84%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/",
            "title": "hexo的diaspora主题的相关操作",
            "date_published": "2019-11-06T03:11:37.000Z",
            "content_html": "<h1 id=\"gitalk配置\"><a class=\"markdownIt-Anchor\" href=\"#gitalk配置\">#</a> gitalk 配置</h1>\n<p><img data-src=\"/../../img/1.png\" alt=\"步骤-1.png\"></p>\n<p><img data-src=\"/../../img/2.png\" alt=\"步骤-2.png\"></p>\n<p><img data-src=\"/../../img/3.png\" alt=\"步骤-3.png\"></p>\n",
            "tags": [
                "hexo"
            ]
        },
        {
            "id": "http://example.com/2019/11/01/blog/github%E4%B8%8Ehexo/",
            "url": "http://example.com/2019/11/01/blog/github%E4%B8%8Ehexo/",
            "title": "博客搭建",
            "date_published": "2019-11-01T11:16:03.000Z",
            "content_html": "<p>搭建博客可以用 wordPress vuePress hexo，本站使用 hexo 搭建</p>\n<p>wordPress vuePress hexo</p>\n<p>参考学习博客：<span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuaGFvamkubWUvYnVpbGQtYmxvZy13ZWJzaXRlLWJ5LWhleG8tZ2l0aHViLmh0bWw/ZnJvbT14YQ==\">http://blog.haoji.me/build-blog-website-by-hexo-github.html?from=xa</span></p>\n<h1 id=\"1-安装git\"><a class=\"markdownIt-Anchor\" href=\"#1-安装git\">#</a> 1. 安装 Git</h1>\n<h1 id=\"2-安装nodejs\"><a class=\"markdownIt-Anchor\" href=\"#2-安装nodejs\">#</a> 2. 安装 nodejs</h1>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装完后，打开命令行</span><br><span class=\"line\"></span><br><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<h1 id=\"3-安装hexo\"><a class=\"markdownIt-Anchor\" href=\"#3-安装hexo\">#</a> 3. 安装 hexo</h1>\n<p>前面 git 和 nodejs 安装好后，就可以安装 hexo 了，你可以先创建一个文件夹 blog，然后 cd 到这个文件夹下（或者在这个文件夹下直接右键 git bash 打开）。</p>\n<p>输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>用 hexo -v 查看一下版本</p>\n<p>接下来初始化一下 hexo</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init myblog</span><br></pre></td></tr></table></figure>\n<p>这个 myblog 可以自己取什么名字都行，然后</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd myblog //进入这个myblog文件夹</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<p>新建完成后，指定文件夹目录下有：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_modules: 依赖包</span><br><span class=\"line\">public：存放生成的页面</span><br><span class=\"line\">scaffolds：生成文章的一些模板</span><br><span class=\"line\">source：用来存放你的文章</span><br><span class=\"line\">themes：主题</span><br><span class=\"line\">** _config.yml: 博客的配置文件**</span><br></pre></td></tr></table></figure>\n<p>启动服务</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<h2 id=\"4利用git生成本机ssh-key并添加到github中\"><a class=\"markdownIt-Anchor\" href=\"#4利用git生成本机ssh-key并添加到github中\">#</a> 4. 利用 Git 生成本机 SSH Key 并添加到 GitHub 中</h2>\n<p>本地仓库和 github 之间是通过 SSH 加密传输的，所以需要先到 github 中添加你本机的 SSH Key 进行认证。</p>\n<p>ssh，简单来讲，就是一个秘钥，其中，id_rsa 是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub 是公共秘钥，可以随便给别人看。把这个公钥放在 GitHub 上，这样当你链接 GitHub 自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过 git 上传你的文件到 GitHub 上。</p>\n<p>回到你的 git bash 中，</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;yourname&quot;</span><br><span class=\"line\">git config --global user.email &quot;youremail&quot;</span><br><span class=\"line\">(这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。)</span><br><span class=\"line\"></span><br><span class=\"line\">检查一下你有没有输对</span><br><span class=\"line\">git config user.name</span><br><span class=\"line\">git config user.email</span><br><span class=\"line\"></span><br><span class=\"line\">然后创建SSH,一路回车</span><br><span class=\"line\">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">在gitbash中，查看是否成功</span><br><span class=\"line\">ssh -T git@github.com</span><br><span class=\"line\"></span><br><span class=\"line\">$ cd ~/. ssh #检查本机已存在的ssh密钥</span><br><span class=\"line\">No such file or directory 说明你是第一次使用git。</span><br></pre></td></tr></table></figure>\n<h1 id=\"5将hexo部署到github\"><a class=\"markdownIt-Anchor\" href=\"#5将hexo部署到github\">#</a> 5. 将 hexo 部署到 GitHub</h1>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">首先，ssh key肯定要配置好。</span><br><span class=\"line\"></span><br><span class=\"line\">其次，配置_config.yml中有关deploy的部分：</span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repository: git@github.com:liuxianan/liuxianan.github.io.git</span><br><span class=\"line\">  branch: master</span><br><span class=\"line\">  </span><br><span class=\"line\">  $ hexo g</span><br><span class=\"line\">  $ hexo d</span><br><span class=\"line\">  发布上传很容易，一句hexo d就搞定</span><br><span class=\"line\">  输入hexo d就会将本次有改动的代码全部提交，没有改动的不会：</span><br></pre></td></tr></table></figure>\n<h1 id=\"6修改主题\"><a class=\"markdownIt-Anchor\" href=\"#6修改主题\">#</a> 6. 修改主题</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3RoZW1lcy8=\">官方主题</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pnZDgyNjIzNzcxMC9hcnRpY2xlL2RldGFpbHMvOTk2NzEwMjc=\">Hexo 好看的主题推荐</span></p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> [官方主题](https://hexo.io/themes/)</span><br><span class=\"line\"> 官方主题 https://hexo.io/themes/</span><br><span class=\"line\"> 首先下载这个主题：</span><br><span class=\"line\"> $ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br><span class=\"line\"> 修改_config.yml中的theme: landscape改为theme: yilia，然后重新执行hexo g来重新生成。</span><br><span class=\"line\"> </span><br><span class=\"line\"> [Hexo 好看的主题推荐](https://blog.csdn.net/zgd826237710/article/details/99671027)</span><br><span class=\"line\"> </span><br><span class=\"line\">Indigo</span><br><span class=\"line\"></span><br><span class=\"line\">Butterfly</span><br><span class=\"line\">Pure</span><br><span class=\"line\">Melody</span><br><span class=\"line\">Nexmoe</span><br><span class=\"line\"></span><br><span class=\"line\">Clover</span><br><span class=\"line\">(git clone https://github.com/esappear/hexo-theme-clover themes/clover)</span><br><span class=\"line\"></span><br><span class=\"line\">Hexo-theme-diaspora diaspora</span><br><span class=\"line\">(git clone https://github.com/Fechin/hexo-theme-diaspora.git themes/diaspora)</span><br><span class=\"line\"></span><br><span class=\"line\">Hacker</span><br><span class=\"line\">Hiker</span><br><span class=\"line\">black-blue</span><br><span class=\"line\">Cube</span><br><span class=\"line\">Varaint</span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n<h1 id=\"7hexo基本配置\"><a class=\"markdownIt-Anchor\" href=\"#7hexo基本配置\">#</a> 7.hexo 基本配置</h1>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_config.yml</span><br><span class=\"line\">这里面都是一些全局配置, 冒号后面必须有一个空格，否则可能会出问题</span><br></pre></td></tr></table></figure>",
            "tags": [
                "hexo"
            ]
        },
        {
            "id": "http://example.com/2019/11/01/blog/hexo%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/",
            "url": "http://example.com/2019/11/01/blog/hexo%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/",
            "title": "hexo基本配置",
            "date_published": "2019-11-01T11:16:03.000Z",
            "content_html": "<p>hexo 官网  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvY29uZmlndXJhdGlvbg==\">https://hexo.io/zh-cn/docs/configuration</span></p>\n<h2 id=\"网站\"><a class=\"markdownIt-Anchor\" href=\"#网站\">#</a> 网站</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>title</code></td>\n<td style=\"text-align:left\">网站标题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>subtitle</code></td>\n<td style=\"text-align:left\">网站副标题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>description</code></td>\n<td style=\"text-align:left\">网站描述</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>keywords</code></td>\n<td style=\"text-align:left\">网站的关键词。使用半角逗号  <code>,</code>  分隔多个关键词。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>author</code></td>\n<td style=\"text-align:left\">您的名字</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>language</code></td>\n<td style=\"text-align:left\">网站使用的语言</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>timezone</code></td>\n<td style=\"text-align:left\">网站时区。Hexo 默认使用您电脑的时区。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTGlzdF9vZl90el9kYXRhYmFzZV90aW1lX3pvbmVz\">时区列表</span>。比如说： <code>America/New_York</code> ,  <code>Japan</code> , 和  <code>UTC</code>  。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"指令\"><a class=\"markdownIt-Anchor\" href=\"#指令\">#</a> 指令</h1>\n<h2 id=\"init\"><a class=\"markdownIt-Anchor\" href=\"#init\">#</a> init</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init [folder]</span><br></pre></td></tr></table></figure>\n<p>新建一个网站。如果没有设置  <code>folder</code>  ，Hexo 默认在目前的文件夹建立网站。</p>\n<h2 id=\"new\"><a class=\"markdownIt-Anchor\" href=\"#new\">#</a> new</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>新建一篇文章。如果没有设置  <code>layout</code>  的话，默认使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvY29uZmlndXJhdGlvbg==\">_config.yml</span> 中的  <code>default_layout</code>  参数代替。如果标题包含空格的话，请使用引号括起来。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new &quot;post title with whitespace&quot;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>-p</code> ,  <code>--path</code></td>\n<td style=\"text-align:left\">自定义新文章的路径</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>-r</code> ,  <code>--replace</code></td>\n<td style=\"text-align:left\">如果存在同名文章，将其替换</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>-s</code> ,  <code>--slug</code></td>\n<td style=\"text-align:left\">文章的 Slug，作为新文章的文件名和发布后的 URL</td>\n</tr>\n</tbody>\n</table>\n<p>默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个  <code>index.md</code>  文件。你可以使用  <code>--path</code>  参数来覆盖上述行为、自行决定文件的目录：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page --path about/me &quot;About me&quot;</span><br></pre></td></tr></table></figure>\n<p>以上命令会创建一个  <code>source/about/me.md</code>  文件，同时 Front Matter 中的 title 为  <code>&quot;About me&quot;</code></p>\n<p>注意！title 是必须指定的！如果你这么做并不能达到你的目的：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page --path about/me</span><br></pre></td></tr></table></figure>\n<p>此时 Hexo 会创建  <code>source/_posts/about/me.md</code> ，同时  <code>me.md</code>  的 Front Matter 中的 title 为  <code>&quot;page&quot;</code> 。这是因为在上述命令中，hexo-cli 将  <code>page</code>  视为指定文章的标题、并采用默认的  <code>layout</code> 。</p>\n<h2 id=\"generate\"><a class=\"markdownIt-Anchor\" href=\"#generate\">#</a> generate</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>生成静态文件。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">选项</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>-d</code> ,  <code>--deploy</code></td>\n<td style=\"text-align:left\">文件生成后立即部署网站</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>-w</code> ,  <code>--watch</code></td>\n<td style=\"text-align:left\">监视文件变动</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>-b</code> ,  <code>--bail</code></td>\n<td style=\"text-align:left\">生成过程中如果发生任何未处理的异常则抛出异常</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>-f</code> ,  <code>--force</code></td>\n<td style=\"text-align:left\">强制重新生成文件 Hexo 引入了差分机制，如果  <code>public</code>  目录存在，那么  <code>hexo g</code>  只会重新生成改动的文件。 使用该参数的效果接近  <code>hexo clean &amp;&amp; hexo generate</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>-c</code> ,  <code>--concurrency</code></td>\n<td style=\"text-align:left\">最大同时生成文件的数量，默认无限制</td>\n</tr>\n</tbody>\n</table>\n<p>该命令可以简写为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g</span><br></pre></td></tr></table></figure>\n<h2 id=\"publish\"><a class=\"markdownIt-Anchor\" href=\"#publish\">#</a> publish</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure>\n<p>发表草稿。</p>\n<h2 id=\"server\"><a class=\"markdownIt-Anchor\" href=\"#server\">#</a> server</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>启动服务器。默认情况下，访问网址为：  <code>http://localhost:4000/</code> 。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">选项</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>-p</code> ,  <code>--port</code></td>\n<td style=\"text-align:left\">重设端口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>-s</code> ,  <code>--static</code></td>\n<td style=\"text-align:left\">只使用静态文件</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>-l</code> ,  <code>--log</code></td>\n<td style=\"text-align:left\">启动日记记录，使用覆盖记录格式</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"deploy\"><a class=\"markdownIt-Anchor\" href=\"#deploy\">#</a> deploy</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>部署网站。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>-g</code> ,  <code>--generate</code></td>\n<td style=\"text-align:left\">部署之前预先生成静态文件</td>\n</tr>\n</tbody>\n</table>\n<p>该命令可以简写为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo d</span><br></pre></td></tr></table></figure>\n<h2 id=\"render\"><a class=\"markdownIt-Anchor\" href=\"#render\">#</a> render</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure>\n<p>渲染文件。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>-o</code> ,  <code>--output</code></td>\n<td style=\"text-align:left\">设置输出路径</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"migrate\"><a class=\"markdownIt-Anchor\" href=\"#migrate\">#</a> migrate</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo migrate &lt;type&gt;</span><br></pre></td></tr></table></figure>\n<p>从其他博客系统 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvbWlncmF0aW9u\">迁移内容</span>。</p>\n<h2 id=\"clean\"><a class=\"markdownIt-Anchor\" href=\"#clean\">#</a> clean</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<p>清除缓存文件 ( <code>db.json</code> ) 和已生成的静态文件 ( <code>public</code> )。</p>\n<p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>\n<h2 id=\"list\"><a class=\"markdownIt-Anchor\" href=\"#list\">#</a> list</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo list &lt;type&gt;</span><br></pre></td></tr></table></figure>\n<p>列出网站资料。</p>\n<h2 id=\"version\"><a class=\"markdownIt-Anchor\" href=\"#version\">#</a> version</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo version</span><br></pre></td></tr></table></figure>\n<p>显示 Hexo 版本。</p>\n<h2 id=\"选项\"><a class=\"markdownIt-Anchor\" href=\"#选项\">#</a> 选项</h2>\n<h3 id=\"安全模式\"><a class=\"markdownIt-Anchor\" href=\"#安全模式\">#</a> 安全模式</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo --safe</span><br></pre></td></tr></table></figure>\n<p>在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。</p>\n<h3 id=\"调试模式\"><a class=\"markdownIt-Anchor\" href=\"#调试模式\">#</a> 调试模式</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo --debug</span><br></pre></td></tr></table></figure>\n<p>在终端中显示调试信息并记录到  <code>debug.log</code> 。当您碰到问题时，可以尝试用调试模式重新执行一次，并 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcy9uZXc=\">提交调试信息到 GitHub</span>。</p>\n<h3 id=\"简洁模式\"><a class=\"markdownIt-Anchor\" href=\"#简洁模式\">#</a> 简洁模式</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo --silent</span><br></pre></td></tr></table></figure>\n<p>隐藏终端信息。</p>\n<h3 id=\"自定义配置文件的路径\"><a class=\"markdownIt-Anchor\" href=\"#自定义配置文件的路径\">#</a> 自定义配置文件的路径</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 使用 custom.yml 代替默认的 _config.yml$ hexo server --config custom.yml# 使用 custom.yml 和 custom2.json，其中 custom2.json 优先级更高$ hexo generate --config custom.yml,custom2.json,custom3.yml</span><br></pre></td></tr></table></figure>\n<p>自定义配置文件的路径，指定这个参数后将不再使用默认的  <code>_config.yml</code> 。<br>\n你可以使用一个 YAML 或 JSON 文件的路径，也可以使用逗号分隔（无空格）的多个 YAML 或 JSON 文件的路径。例如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 使用 custom.yml 代替默认的 _config.yml$ hexo server --config custom.yml# 使用 custom.yml, custom2.json 和 custom3.yml，其中 custom3.yml 优先级最高，其次是 custom2.json$ hexo generate --config custom.yml,custom2.json,custom3.yml</span><br></pre></td></tr></table></figure>\n<p>当你指定了多个配置文件以后，Hexo 会按顺序将这部分配置文件合并成一个  <code>_multiconfig.yml</code> 。如果遇到重复的配置，排在后面的文件的配置会覆盖排在前面的文件的配置。这个原则适用于任意数量、任意深度的 YAML 和 JSON 文件。</p>\n<h3 id=\"显示草稿\"><a class=\"markdownIt-Anchor\" href=\"#显示草稿\">#</a> 显示草稿</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo --draft</span><br></pre></td></tr></table></figure>\n<p>显示  <code>source/_drafts</code>  文件夹中的草稿文章。</p>\n<h3 id=\"自定义-cwd\"><a class=\"markdownIt-Anchor\" href=\"#自定义-cwd\">#</a> 自定义 CWD</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo --cwd /path/to/cwd</span><br></pre></td></tr></table></figure>\n<p>自定义当前工作目录（Current working directory）的路径。</p>\n",
            "tags": [
                "hexo"
            ]
        }
    ]
}